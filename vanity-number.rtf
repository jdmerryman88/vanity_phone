{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import json\
import boto3\
dynamodb = boto3.resource("dynamodb")\
table = dynamodb.Table("contact-list")\
alphaNum = [["0"],['1'],["A", "B", "C", "2"],["D", "E", "F", "3"],["G", "H", "I", "4"],["J", "K", "L", "5"],["M", "N", "O","6"],\
            ["P","Q", "R", "S", "7"],["T", "U", "V", "8"], ["W", "X", "Y", "Z", "9"]]\
            \
vanityNumNoArea = []\
numNoArea = ""\
\
def lambda_handler(event, context):\
    address = event\\\
        .get("Details", \{\})\\\
        .get("ContactData", \{\})\\\
        .get("CustomerEndpoint", \{\})\\\
        .get("Address", None)\
    if not address:\
        raise("JSON object is invalid")\
        \
    put(address)\
    \
def put(address):\
    phoneNum = address\
    numNoArea = ""\
    n = 5\
    while n < len(phoneNum):\
        numNoArea = numNoArea + phoneNum[n]\
        n += 1\
    \
    for i in range(len(alphaNum[int(numNoArea[0])])):\
        for x in range(len(alphaNum[int(numNoArea[1])])):\
            for y in range(len(alphaNum[int(numNoArea[2])])):\
                for z in range(len(alphaNum[int(numNoArea[3])])):\
                    for a in range(len(alphaNum[int(numNoArea[4])])):\
                        for b in range(len(alphaNum[int(numNoArea[5])])):\
                            for c in range(len(alphaNum[int(numNoArea[6])])):\
                                result = alphaNum[int(numNoArea[0])][i] + alphaNum[int(numNoArea[1])][x]+ alphaNum[int(numNoArea[2])][y]+alphaNum[int(numNoArea[3])][y]+ alphaNum[int(numNoArea[4])][a] + alphaNum[int(numNoArea[5])][b]+ alphaNum[int(numNoArea[6])][c]\
                                vanityNumNoArea.append(result)\
                                \
    table.put_item(Item=\{'origin': address, 'Vanity1' : vanityNumNoArea[0], 'Vanity2' : vanityNumNoArea[1], 'Vanity3' : vanityNumNoArea[2],\
                        'Vanity4' : vanityNumNoArea[3], 'Vanity5' : vanityNumNoArea[4]\
    \})\
    return phoneNum\
    \
    \
    }